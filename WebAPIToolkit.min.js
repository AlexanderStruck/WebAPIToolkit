WebAPIToolkit = function () { }, WebAPIToolkit.Common = function () { return { NoGuidSet: "No guid set", NoLogicalNameSet: "No logicalname set", IncorrectLogicalnameForAssignment: "Incorrect logicalname: It has to be systemuser or team", IsObject: function (a) { return "object" == typeof a }, IsGuid: function (a) { return /^(\{{0,1}([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}\}{0,1})$/.test(a) }, ParseGUID: function (a) { return WebAPIToolkit.Common.IsGuid(a) ? "{" == a[0] ? a.substr(1, 36) : a.substr(0, 36) : null }, Merge: function (a, b) { return a ? b ? a.length > 0 && b.length > 0 ? ("/" == a[a.length - 1] ? a : a + "/") + ("/" == b[0] ? b.substr(1, b.length - 1) : b) : "" : a ? a : "" : b ? b : "" }, GetVersion: function () { if (window.APPLICATION_FULL_VERSION) return window.APPLICATION_FULL_VERSION; var a = new XMLHttpRequest; return a.open("GET", encodeURI(WebAPIToolkit.Common.Merge(WebAPIToolkit.Common.Merge(Xrm.Page.context.getClientUrl(), "/api/data/v8.0/"), "RetrieveVersion()")), !1), a.setRequestHeader("Accept", "application/json"), a.setRequestHeader("Content-Type", "application/json; charset=utf-8"), a.setRequestHeader("OData-MaxVersion", "4.0"), a.setRequestHeader("OData-Version", "4.0"), a.setRequestHeader("Prefer", "odata.include-annotations=*"), a.send(), JSON.parse(a.response).Version }, GetApiURL: function () { if (WebAPIToolkit.Common.VersionCompare(WebAPIToolkit.Common.GetVersion(), "8.2.0.0") >= 0) var a = "/api/data/v8.2/"; else if (WebAPIToolkit.Common.VersionCompare(WebAPIToolkit.Common.GetVersion(), "8.1.0.0") >= 0) var a = "/api/data/v8.1/"; else var a = "/api/data/v8.0/"; return a }, VersionCompare: function (a, b) { var f, g, h, c = ("" + a).split("."), d = ("" + b).split("."), e = Math.min(c.length, d.length); for (h = 0; h < e; h++) if (f = parseInt(c[h], 10), g = parseInt(d[h], 10), isNaN(f) && (f = c[h]), isNaN(g) && (g = d[h]), f != g) return f > g ? 1 : f < g ? -1 : NaN; return c.length === d.length ? 0 : c.length < d.length ? -1 : 1 }, GetPluralName: function (a) { return a ? "s" == a[a.length - 1] || "x" == a[a.length - 1] ? a + "es" : "y" == a[a.length - 1] ? a.substr(0, a.length - 1) + "ies" : a + "s" : "" } } }(), WebAPIToolkit.BusinessEntity = function (a, b) { var c = null, d = "", e = null, f = {}; if ("" == a || null == a) throw new WebAPIToolkit.Exceptions.ArgumentException(WebAPIToolkit.Common.NoLogicalNameSet); return WebAPIToolkit.Common.IsGuid(b) ? c = b : WebAPIToolkit.Common.IsObject(b) && (e = b, f = b, c = b["" + a + "id"]), d = a, { Contains: function (a) { return null != GetField(a).Value }, SetText: function (a, b) { f[a] = b }, SetLookup: function (a, b, c) { b ? f["" + a + "@odata.bind"] = "/" + WebAPIToolkit.Common.GetPluralName(b) + "(" + c + ")" : f["" + a + "@odata.bind"] = null }, SetLookupExplicit: function (a, b, c) { f["" + a + "_" + b + "@odata.bind"] = "/" + WebAPIToolkit.Common.GetPluralName(b) + "(" + c + ")" }, SetDate: function (a, b) { f[a] = b }, SetBoolean: function (a, b) { f[a] = b }, SetInteger: function (a, b) { f[a] = b }, SetDecimal: function (a, b) { f[a] = b }, SetDouble: function (a, b) { f[a] = b }, SetOptionSet: function (a, b) { f[a] = b }, SetCurrency: function (a, b) { f[a] = b }, GetField: function (a) { var b = null != f[a] ? { Value: f[a] } : null; if (null == b && f[a + "@odata.bind"]) b = { LogicalName: f[a + "@odata.bind"].substr(1, f[a + "@odata.bind"].length - 40), ID: f[a + "@odata.bind"].substr(f[a + "@odata.bind"].length - 37, 36), Value: f[a + "@odata.bind"].substr(f[a + "@odata.bind"].length - 37, 36) }; else if (null == b && (f["_" + a + "_value"] || f[a + "@Microsoft.Dynamics.CRM.lookuplogicalname"])) { var c = f["_" + a + "_value"] ? "_" + a + "_value" : a; b = { ID: f[c], Value: f[c], LogicalName: f[c + "@Microsoft.Dynamics.CRM.lookuplogicalname"], AssociatedNavigationproperty: f[c + "@Microsoft.Dynamics.CRM.associatednavigationproperty"], FormattedValue: f[c + "@OData.Community.Display.V1.FormattedValue"] } } return null != b && null == b.FormattedValue && f[a + "@OData.Community.Display.V1.FormattedValue"] && (b.FormattedValue = f[a + "@OData.Community.Display.V1.FormattedValue"]), null == b && (b = { Value: null }), b }, GetJson: function () { return f }, Update: function (a) { return WebAPIToolkit.Common.IsGuid(c) ? WebAPIToolkit.Web.Update(d, c, f, a) : WebAPIToolkit.Web.Create(d, f, a) }, RetrievedJson: e, ID: c, LogicalName: d } }, WebAPIToolkit.Web = function () { function a(a, b, c, d, e, f, g, h, i) { if (200 == a) { var j = JSON.parse(b); if (!e) return j; if (null != j && null != j.value && null != j.value.length) { for (var k = e, l = [], m = 0; m < j.value.length; m++) { var n = new WebAPIToolkit.BusinessEntity(k, j.value[m]); l[l.length] = n } if (!d) return l; d(l, f, g, h, i) } else { if (!d) return new WebAPIToolkit.BusinessEntity(e, j); d(new WebAPIToolkit.BusinessEntity(e, j, f, g, h, i)) } } else { if (200 != a && 204 != a) { if (304 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "304:" + p.message } if (401 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "401:" + p.message } if (403 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "403:" + p.message } if (413 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "413:" + p.message } if (400 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "400:" + p.message } if (404 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "404:" + p.message } if (405 == a) { var p = JSON.parse(b).error; throw console.log(p.message), "405:" + p.message } var p = JSON.parse(b).error; throw console.log(p.message), p.message } var o = null; if (c) var o = c.substr(c.length - 38).substring(1, 37); if (!d) return o; d(o, f, g, h, i) } } function b(b, c, e, f, g, h, i, j, k) { var l = new XMLHttpRequest; return l.open(b, encodeURI(WebAPIToolkit.Common.Merge(WebAPIToolkit.Common.Merge(d() + WebAPIToolkit.Common.GetApiURL()) + c)), !!f), l.setRequestHeader("Accept", "application/json"), l.setRequestHeader("Content-Type", "application/json; charset=utf-8"), l.setRequestHeader("OData-MaxVersion", "4.0"), l.setRequestHeader("OData-Version", "4.0"), l.setRequestHeader("Prefer", "odata.include-annotations=*"), "post" == b.toLowerCase() || "patch" == b.toLowerCase() ? l.send(e) : l.send(), f ? void (l.onreadystatechange = function () { 4 == l.readyState && a(this.status, this.responseText, this.getResponseHeader("OData-EntityId"), f, g, h, i, j, k) }) : a(l.status, l.response, l.getResponseHeader("OData-EntityId"), null, g) } function c(a) { for (var b = "", c = !1, d = a.indexOf("<entity name="), e = d; e < a.length; e++) if ("'" == a[e] || '"' == a[e]) { if (c) break; c = !0 } else c && (b += a[e]); return b.trim() } function d() { var a = Xrm.Page.context.getClientUrl(); return a } return { Request: function (a, c, d, e) { return b(a, c, d, e) }, Fetch: function (a, d) { var e = c(a); if ("" == e.trim()) throw new "entityName not found"; return b("GET", WebAPIToolkit.Common.GetPluralName(e) + "?fetchXml=" + encodeURI(a), null, d, e) }, Retrieve: function (a, c, d, e) { var f = ""; if (null != d && d.length > 0) for (var f = "?$select=", g = 0; g < d.length; g++) f += d[g] + (g + 1 == d.length ? "" : ","); else f = "?$select"; return b("GET", WebAPIToolkit.Common.GetPluralName(a) + "(" + WebAPIToolkit.Common.ParseGUID(c) + ")/" + (f ? f : ""), null, e, a) }, RetrieveWithParams: function (a, c, d, e) { return b("GET", WebAPIToolkit.Common.GetPluralName(a) + "(" + WebAPIToolkit.Common.ParseGUID(c) + ")/" + (d ? "?" + d : ""), null, e, a) }, RetrieveMultiple: function (a, c, d) { return b("GET", WebAPIToolkit.Common.GetPluralName(a) + (c ? "?" + c : ""), null, d, a) }, Create: function (a, c, d) { return b("POST", WebAPIToolkit.Common.GetPluralName(a), JSON.stringify(c), d, a) }, Update: function (a, c, d, e) { var f = !1; if (null != d) for (var g in d) if (g.indexOf("@odata.bind") != -1 && null == d[g]) { if (delete d[g], e) { b("DELETE", WebAPIToolkit.Common.GetPluralName(a) + "(" + WebAPIToolkit.Common.ParseGUID(c) + ")/" + g.replace("@odata.bind", "") + "/$ref", null, function (a, b, c, d, e) { WebAPIToolkit.Web.Update(b, c, d, e) }, null, a, c, d, e), f = !0; break } WebAPIToolkit.Web.ClearLookup(a, c, g.replace("@odata.bind", "")) } if (!f) return b("PATCH", WebAPIToolkit.Common.GetPluralName(a) + "(" + WebAPIToolkit.Common.ParseGUID(c) + ")/", JSON.stringify(d), e, a) }, Delete: function (a, c, d) { return b("DELETE", WebAPIToolkit.Common.GetPluralName(a) + "(" + WebAPIToolkit.Common.ParseGUID(c) + ")/", null, d, a) }, Associate: function (a, c, e, f, g, h) { return b("POST", WebAPIToolkit.Common.GetPluralName(c) + "(" + WebAPIToolkit.Common.ParseGUID(e) + ")/" + a + "/$ref", JSON.stringify({ "@odata.id": WebAPIToolkit.Common.Merge(d(), WebAPIToolkit.Common.GetApiURL() + WebAPIToolkit.Common.GetPluralName(f) + "(" + g + ")") }), h) }, Disassociate: function (a, c, e, f, g, h) { return b("DELETE", WebAPIToolkit.Common.GetPluralName(c) + "(" + WebAPIToolkit.Common.ParseGUID(e) + ")/" + a + "/$ref?$id=" + WebAPIToolkit.Common.Merge(d(), WebAPIToolkit.Common.GetApiURL() + WebAPIToolkit.Common.GetPluralName(f) + "(" + g + ")"), null, h) }, SetState: function (a, b, c, d, e) { return WebAPIToolkit.Web.Update(a, b, { statecode: c, statuscode: d }, e, a) }, Assign: function (a, b, c, d, e) { if ("systemuser" != c.toLowerCase().trim() && "team" != c.toLowerCase().trim()) throw new WebAPIToolkit.Exceptions.ArgumentException(WebAPIToolkit.Common.IncorrectLogicalnameForAssignment); var f = new WebAPIToolkit.BusinessEntity(a, b); f.SetLookup("ownerid", c, d), f.Update(e) }, ClearLookup: function (a, c, d, e) { return b("DELETE", WebAPIToolkit.Common.GetPluralName(a) + "(" + WebAPIToolkit.Common.ParseGUID(c) + ")/" + d + "/$ref", null, e, a) } } }();